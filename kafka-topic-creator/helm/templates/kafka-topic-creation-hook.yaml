apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.jobName }}
  labels:
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": {{ .Values.helmHook }}
spec:
  activeDeadlineSeconds: {{ int .Values.activeDeadlineSeconds }}
  ttlSecondsAfterFinished: {{ int .Values.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        app: {{ .Values.jobName }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: topic-creator
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/bash"
            - "-cex"
            - |
            {{- range $topicName, $topicConfigs := $.Values.kafka.topics }}
              /opt/kafka/bin/kafka-topics.sh --create \
              --if-not-exists \
              --bootstrap-server {{ $.Values.kafka.address | quote }} \
              --topic {{ $topicName | quote }} \
              {{- range $configKey, $configValue := $topicConfigs.configs }}
              {{- if or (kindIs "float64" $configValue) (kindIs "int" $configValue) (kindIs "int64" $configValue) }}
              --config {{ $configKey }}={{ int $configValue }} \
              {{- else }}
              --config {{ $configKey }}={{ $configValue | trimPrefix "[" | trimSuffix "]" | trim | quote }} \
              {{- end }}
              {{- end }}
              --replication-factor {{ $topicConfigs.replicationFactor | quote }} \
              --partitions {{ $topicConfigs.partitions | quote }}
            {{- if and (not $.Values.skipUpdate) $topicConfigs.configs }}
            {{- $comma := false }}
              /opt/kafka/bin/kafka-configs.sh --alter \
              --bootstrap-server {{ $.Values.kafka.address | quote }} \
              --add-config \
              {{ range $configKey, $configValue := $topicConfigs.configs }}{{ if $comma }}{{ printf "," }}{{ end }}"{{ $configKey }}={{ if or (kindIs "float64" $configValue) (kindIs "int" $configValue) (kindIs "int64" $configValue) }}{{ if and $.Values.kafka.maxMessageBytesLowerBound (eq "max.message.bytes" $configKey) (gt (int  $.Values.kafka.maxMessageBytesLowerBound) (int $configValue)) }}{{ int $.Values.kafka.maxMessageBytesLowerBound }}{{ else }}{{ int $configValue }}{{ end }}{{ else }}{{ $configValue }}{{ end }}"{{- $comma = true -}}{{ end }} \
              --entity-type topics \
              --entity-name {{ $topicName | quote }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  backoffLimit: 100
